{
  "info": {
    "_postman_id": "4a2e3b9f-8a5c-4e06-a5f2-70d1a3a54321",
    "name": "Blog API",
    "description": "Test endpoints for Blog API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"Test123!@#\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Create new user"
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save tokens to environment",
                  "var jsonData = pm.response.json();",
                  "",
                  "if (jsonData && jsonData.accessToken) {",
                  "    pm.environment.set('accessToken', jsonData.accessToken);",
                  "    console.log('Access token saved!');",
                  "}",
                  "",
                  "if (jsonData && jsonData.refreshToken) {",
                  "    pm.environment.set('refreshToken', jsonData.refreshToken);",
                  "    console.log('Refresh token saved!');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"Test123!@#\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "User login"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save new tokens to environment",
                  "var jsonData = pm.response.json();",
                  "",
                  "if (jsonData && jsonData.accessToken) {",
                  "    pm.environment.set('accessToken', jsonData.accessToken);",
                  "    console.log('New access token saved!');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{refreshToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Get new access token using refresh token"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "End user session"
          },
          "response": []
        }
      ],
      "description": "Authentication operations"
    },
    {
      "name": "User",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/user/me",
              "host": ["{{baseUrl}}"],
              "path": ["user", "me"]
            },
            "description": "Get current user profile"
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"updated_username\",\n    \"email\": \"updated@example.com\",\n    \"profilePicture\": \"https://example.com/pic.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/user/me",
              "host": ["{{baseUrl}}"],
              "path": ["user", "me"]
            },
            "description": "Update user profile"
          },
          "response": []
        }
      ],
      "description": "User profile operations"
    }
  ]
}
